# port scan plugin
yakit.AutoInitYakit()


handleCheck = func(target,port){
    addr = str.HostPort(target, port)
    isTls = str.IsTLSServer(addr)


    packet = `
GET /_async/AsyncResponseService HTTP/1.1
Host: {{params(target)}}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Cache-Control: max-age=0
Cookie: ADMINCONSOLESESSION=QgLkvsJZ0p5sLRlpy1T9jyQ8KSTHQLZ57GbHzvhmH5MBnBkyh96v!1180166826; JSESSIONID=5XVwWyWSmsj5BRrwDRMZ8J1XSEVhGbQCr5i9atqcoelwpZ79u8Sr!-2146965116
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.64 Safari/537.36

`

    rsp,req,_ = poc.HTTP(packet, 
    poc.params({"target":addr}),
    poc.https(isTls),
    poc.redirectTimes(0),
    )
    // dump(rsp)
    if len(rsp) > 0 {
        
        if str.MatchAllOfSubString(rsp, "AsyncResponseService home page"){
            yakit.Info("%v found WebLogic Server WLS 组件远程代码执行漏洞 CVE-2019-2890", addr)
            risk.NewRisk(
            addr, risk.severity("high"), risk.type("poc"),
            risk.title("CVE-2019-2890"),            ## English Title for Risk
            risk.titleVerbose(" WebLogic Server WLS 组件远程代码执行漏洞 CVE-2019-2890"),           ##  中文标题
            risk.details({
                "target": addr,
                "request": req,
                "response": rsp,
            }),
        )
        }
       
    }


    return
}

handle = func(result /* *fp.MatchResult */) {
    // handle match result
    if !result.IsOpen(){
        return
    }
    
    if len(result.Fingerprint.HttpFlows)>0{
        handleCheck(result.Target,result.Port)
    }
    
}