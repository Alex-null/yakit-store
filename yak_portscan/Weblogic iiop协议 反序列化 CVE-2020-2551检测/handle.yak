# port scan plugin
yakit.AutoInitYakit()


handleCheck = func(target,port){


    conn, err = tcp.Connect(target, port, tcp.clientTimeout(4))
    die(err)

    GIOPRequest,_ = codec.DecodeHex("47494f50010200030000001700000002000000000000000b4e616d6553657276696365")



    yakit.Info("START to Send GIOPRequest")
    conn.Write(GIOPRequest)
    reply = conn.RecvTimeout(2)[0]

    if str.MatchAllOfSubString(reply, "GIOP"){
            yakit.Info("%v found WebLogic Weblogic iiop协议 反序列化 CVE-2020-2551", target)
            risk.NewRisk(
            target, risk.severity("high"), risk.type("poc"),
            risk.title("CVE-2020-2551"),            ## English Title for Risk
            risk.titleVerbose("WebLogic Weblogic iiop协议 反序列化 CVE-2020-2551"),           ##  中文标题
            risk.details({
                "target": target,
                "request": "47494f50010200030000001700000002000000000000000b4e616d6553657276696365",
                "response": parseString(reply),
            }),
        )
    }
       

    return
}

handle = func(result /* *fp.MatchResult */) {
    // handle match result
    if !result.IsOpen(){
        return
    }
    
    // if len(result.Fingerprint.HttpFlows)>0{
        handleCheck(result.Target,result.Port)
    // }
    
}