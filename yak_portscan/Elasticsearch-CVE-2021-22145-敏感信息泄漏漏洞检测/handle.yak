# port scan plugin
yakit.AutoInitYakit()

handleCheck = func(target,port){
    addr = str.HostPort(target, port)
    isTls = str.IsTLSServer(addr)

    
    packet = `
GET / HTTP/1.1
Host: {{params(target)}}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Cache-Control: max-age=0
Referer: http://127.0.0.1/
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.64 Safari/537.36

`

    rsp,req,_ = poc.HTTP(packet, 
    poc.params({"target":addr}),
    poc.https(isTls),
    poc.redirectTimes(0),
    )




    if len(rsp) > 0 {
        
       
        data = str.SplitHTTPHeadersAndBodyFromPacket(rsp)[1]

        version  := json.loads(data)["version"]["number"]


        lastVer = [7,10,0]
        recVer =[7,13,3]


        for i,v = range str.Split(version, "."){
            if  lastVer[i] > parseInt(v)  {
                return
            }
            if recVer[i] < parseInt(v) {
                return 
            }
        }
        yakit.Info("%v found CVE-2021-22145 Elasticsearch 敏感信息泄漏漏洞", addr)
        risk.NewRisk(
        addr,risk.title("CVE-2021-22145"),
        risk.severity("low"),
        risk.titleVerbose("CVE-2021-22145 Elasticsearch 敏感信息泄漏漏洞"),
        risk.type("rce[Confluence]"),
        risk.payload(sprintf(`%v`,addr)),)
    }

    return
}

handle = func(result /* *fp.MatchResult */) {
    // handle match result
    if !result.IsOpen() {
        return
    }

    if len(result.Fingerprint.HttpFlows)>0{
        handleCheck(result.Target,result.Port)
    }
    
}
