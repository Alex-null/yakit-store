# port scan plugin
yakit.AutoInitYakit()

handleCheck = func(target,port,path){
    addr = str.HostPort(target, port)
    isTls = str.IsTLSServer(addr)

    packet = `GET {{params(path)}} HTTP/1.1
Host: {{params(target)}}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
DNT: 1
Cookie: JSESSIONID.9b72fa68=node01j455pscz923515r26cyjcizog63175.node0; screenResolution=1728x1048
Pragma: no-cache
Referer: http://{{params(target)}}/
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36
sec-gpc: 1
`

    rsp,req,_ = poc.HTTP(packet, 
    poc.params({"target":addr,"path":path}),
    poc.https(isTls),
    poc.redirectTimes(0),
    )
    dump(rsp)
    if len(rsp) > 0 {
        r,err = re.Compile(`X-Jenkins:\s+(\d+\.\d+\.\d+)\s+`)
        res = r.FindAllStringSubmatch(string(rsp),-1)[0][1]
        println(res)
        if len(res) >0 {
            yakit.Info("%v found Jenkins 版本信息 ", addr)
            risk.NewRisk(
            addr,risk.title("Jenkins版本"),
            risk.severity("info"),
            risk.titleVerbose("Jenkins版本信息"),
            risk.type("info[Jenkins]"),
            risk.payload(`X-Jenkins:\s+(\d+\.\d+\.\d+)\s+`),
        )
        }
       
    }

    return
}

handle = func(result /* *fp.MatchResult */) {
    // handle match result
    if !result.IsOpen(){
        return
    }
    r,_ = re.Compile(`Path=(.*?);`)
    path = r.FindStringSubmatch(string(result.Fingerprint))[1]
    // println(result.Fingerprint)
    if len(result.Fingerprint.HttpFlows)>0{
        handleCheck(result.Target,result.Port,path)
    }
    
}
